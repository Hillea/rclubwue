{
  "hash": "d93da17c8c64bae8c8c44aa26b948309",
  "result": {
    "markdown": "---\ntitle: \"W3_Randomize_Worksheet\"\nauthor: \"your name\"\ndate: \"2024-02-02\"\noutput: html_document\n---\n\n\n\n\n## Francesco\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# test <- tibble(\n#   ch1 = c(5,0,0),\n#   ch2 = c(5,5,5),\n#   ch3 = c(5,0,5) %>% \n#      mutate(ch2b = ifelse(ch2==5, 2, ch2),\n#          marker = ch1 + ch2 + ch3)\n# )\n# # 1. Divide every column by 5 to get 0/1 (or if 5 make it 1)\n# test2 <- test %>% \n#   mutate(across(ch1:ch3, ~ .x/5),\n#          marker = ch1*1 + ch2*2 + ch3*4,\n#          ch2b = ifelse(ch2==1, 2, ch2),\n#          marker = ch1 + ch2 + ch3)\n#     #ch1 = ch1/5,\n#      #    ch2 = ch2/5,\n#       #   ch3 = ch3/5)\n# \n# # 2. Multiply columns by column name/value\n```\n:::\n\n\n# Randomization & Counterbalancing\n\nIn today's session, you'll work in small groups (2-3 people) on the following exercises. In this worksheet, I added the descriptions of the tasks/problems, and already added code chunks where you should fill in code. I don't expect that we will finish all exercises (maybe half?)!\n\n## Task 1\n\n1.  [ ] **Discuss with everyone where and how you need randomization or counterbalancing in your study designs. Feel free to take notes below.**\n\nNotes:\n\n## Task 2\n\n1.  [ ] **What kind of function would you need for assigning conditions to participants?**\n\n2.  [ ] **How can we solve this problem if we have two different things we want to randomize/counterbalance across two factors (e.g. treatment/control and blue/yellow)?**\n\n## Task 3\n\n1.  [ ] **What are specific problems with randomization/counterbalancing in your study design?**\n\n## Task 4\n\nLet's have a look at Ecem's study, which has a complicated structure for (pseudo-)random assignment of stimuli.\n\nEcem has 2x4 stimulus characteristics that should vary:\n\n-   shape: heart, sacral, throat, solar\n\n-   color: yellow, purple, orange, blue\n\nEach participant should have 4 stimuli assigned, each color and shape should be represented once. In addition, no stimuli (combination of color&shape) should be the same across participants. There are thus 4\\*4=16 unique stimuli available.\n\n1.  [ ] **How would you assign four stimuli to four different participants, making sure that every participant sees every color & shape but no combination is used more than once across participants?**\n\n2.  [ ] **Write your solution as pseudo-code as comments: Break it down in little steps and describe which computation should happen at each step/what the code should do.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. create vectors for shape and color\n\n# 2. ...\n\n\n# 3. ...\n```\n:::\n\n\n## Task 5\n\nIn Ecem's study, we want to have 100 trials (in Block 1): 60 \"single-cue\" and 40 \"multi-cue\" trials.\\\nFor the 60 single-cue trials, each of the four stimulus types is supposed to be shown 15 time.\\\nFor the multi-cue trials, each combination (threat-amb1, threat-amb2, safety-amb1, safety-amb2) should be shown 10x.\n\n1.  [ ] **How can we make an individual trial list for one participant?**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. ...\n\n\n# 2. ...\n```\n:::\n\n\n## Task 6\n\nWe furthermore want to add the following information for the single-cue trials:\n\n1.  [ ] **How can we get the further stimulus information (color, shape) into this list?**\n\n2.  [ ] **How can we add the info whether it’s a “sc” or a “mc” trial**\n\n3.  [ ] **How can we determine whether a shock should be given in each trial?**\n\n\n::: {.cell}\n\n:::\n\n\n## Task 7\n\nFor the multi-cue trials, we have two stimuli per trial.\n\n1.  [ ] **How can we add the information (color, shape, shock given) for the multi-cue trials?**\n\n\n::: {.cell}\n\n:::\n\n\n## Task 8\n\nIn the multi-cue trials, Ecem also wants to show two more stimuli: The other combinations of color and shape (e.g. color1 with shape2).\n\n1.  [ ] **How can we add these other two combinations of shape and color as new columns?**\n\n\n::: {.cell}\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}