{
  "hash": "17084d0f9a6764ee0361fb518298098f",
  "result": {
    "markdown": "---\ntitle: \"Visualizing Ulkar's Data\"\nsubtitle: |\n   | R Coding Club \n   | RTG 2660\nauthor: \"Dr. Lea Hildebrandt\"\ndate: 2024/01/16\ndescription: \"Making some real DataViz\"\nformat: \n  revealjs:\n    smaller: true\n    scrollable: true\n    slide-number: true\n    theme: simple\n    embed-resources: true\neditor: visual\nfrom: markdown+emoji\n---\n\n\n# Warm-Up\n\n\n::: {.cell}\n<style type=\"text/css\">\ncode.sourceCode {\n  font-size: 1.4em;\n}\n\ndiv.cell-output-stdout {\n  font-size: 1.4em;\n}\n</style>\n:::\n\n\nI don't think we'll need a warm up today!\\\nIf anyone brought a problem, let me know and we cover it next time.\n\n## Ulkar's Data\n\nWhat is the content of the four files we have? What do we need to know about the paradigm and data? What do all the variables/columns stand for?\n\n-   expactacy_ratings.txt\n\n    -   \n\n-   PIT-Transfer-only.txt\n\n-   pit-transfer-all.txt\n\n-   learning.txt\n\nRead in and inspect data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse) \n\nexpectancy_ratings <- read_delim(\"Data/expactacy_ratings.txt\", delim = \"\\t\")\ntransfer <- read_delim(\"Data/PIT-Transfer-only.txt\", delim = \"\\t\")\ntransfer_all <- read_delim(\"Data/pit-transfer-all.txt\", delim = \"\\t\")\nlearning <- read_delim(\"Data/learning.txt\", delim = \"\\t\")\n\nglimpse(expectancy_ratings)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,674\nColumns: 7\n$ Subject           <dbl> 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001…\n$ Pavlovian_Stimuli <chr> \"Triangle1.bmp\", \"Triangle1.bmp\", \"Star1.bmp\", \"Star…\n$ Procedure         <chr> \"ExpectancyRate\", \"ExpectancyRate\", \"ExpectancyRate\"…\n$ Expectancy_Rating <dbl> 5, 5, 3, 3, 5, 5, 2, 2, 2, 3, 5, 3, 2, 5, 5, 5, 5, 3…\n$ Responses         <dbl> 2, 3, 3, 1, 1, 1, 1, 1, 3, 2, 3, 2, 2, 2, 3, 3, 2, 1…\n$ Group             <chr> \"Crash/Load\", \"Crash/Load\", \"Crash/Load\", \"Crash/Loa…\n$ CS                <chr> \"CS3\", \"CS3\", \"CS2\", \"CS2\", \"CS3\", \"CS2\", \"CS1\", \"CS…\n```\n:::\n\n```{.r .cell-code}\nunique(expectancy_ratings$Subject)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1001 1004 1005 1006 1008 1009 1010 1011 1012 1013 1014 1016 1017 1018 1019\n[16] 1020 1025 1026 1027 1028 1029 1031 1032 1033 1034 1035 1036 2001 2002 2008\n[31] 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2025 2026\n[46] 2027 2028 2029 2030 2031 2032 2033 2035 2037 2038 3001 3003 3004 3005 3006\n[61] 3007 3008 3009 3010 3011 3012 3013 3014 3015 3016 3018 3019 3020 3021 3022\n[76] 3023 3024 3025 3026 3027 3028 3029 3030 3031 3032 3033 3034 3036 1021 1022\n[91] 1023 3002 3017\n```\n:::\n:::\n\n\n## What do we want to visualize?\n\n## Further Data Wrangling?\n\n## DataViz\n\n## Next Meeting?\n\nWhen?\n\nWhat should we cover?\n\nBasic stats (how basic?), functions, R Projects, writing reports..?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}